{
	"addlinkedlocation": {
		"prefix": "addlinkedlocation",
		"body": "AddLinkedLocation(${1:Location akLoc}, ${2:Keyword akKeyword})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"getalllinkedlocations": {
		"prefix": "getalllinkedlocations",
		"body": "GetAllLinkedLocations(${1:Keyword akKeyword})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"getkeyworddata": {
		"prefix": "getkeyworddata",
		"body": "GetKeywordData(${1:Keyword akKeyword})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"getreftypealivecount": {
		"prefix": "getreftypealivecount",
		"body": "GetRefTypeAliveCount(${1:LocationRefType akRefType})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"getreftypedeadcount": {
		"prefix": "getreftypedeadcount",
		"body": "GetRefTypeDeadCount(${1:LocationRefType akRefType})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"hascommonparent": {
		"prefix": "hascommonparent",
		"body": "HasCommonParent(${1:Location akOther}, ${2:Keyword akFilter = None})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"haseverbeencleared": {
		"prefix": "haseverbeencleared",
		"body": "HasEverBeenCleared()${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"hasreftype": {
		"prefix": "hasreftype",
		"body": "HasRefType(${1:LocationRefType akRefType})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"ischild": {
		"prefix": "ischild",
		"body": "IsChild(${1:Location akOther})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"iscleared": {
		"prefix": "iscleared",
		"body": "IsCleared()${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"islinkedlocation": {
		"prefix": "islinkedlocation",
		"body": "IsLinkedLocation(${1:Location akLoc}, ${2:Keyword akKeyword})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"isloaded": {
		"prefix": "isloaded",
		"body": "IsLoaded()${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"issamelocation": {
		"prefix": "issamelocation",
		"body": "IsSameLocation(${1:Location akOtherLocation}, ${2:Keyword akKeyword = None})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"modifykeyworddata": {
		"prefix": "modifykeyworddata",
		"body": "ModifyKeywordData(${1:Keyword akKeyword}, ${2:float afData})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"onlocationcleared": {
		"prefix": "onlocationcleared",
		"body": "Event OnLocationCleared()\r\n    ${0}\r\nEndEvent",
		"description": "Event Location.OnLocationCleared",
		"scope": "source.papyrus"
	},
	"onlocationloaded": {
		"prefix": "onlocationloaded",
		"body": "Event OnLocationLoaded()\r\n    ${0}\r\nEndEvent",
		"description": "Event Location.OnLocationLoaded",
		"scope": "source.papyrus"
	},
	"removelinkedlocation": {
		"prefix": "removelinkedlocation",
		"body": "RemoveLinkedLocation(${1:Location akLoc}, ${2:Keyword akKeyword})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"reset": {
		"prefix": "reset",
		"body": "Reset()${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"setcleared": {
		"prefix": "setcleared",
		"body": "SetCleared(${1:bool abCleared = true})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"setkeyworddata": {
		"prefix": "setkeyworddata",
		"body": "SetKeywordData(${1:Keyword akKeyword}, ${2:float afData})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"onlocationcleared-REM": {
		"prefix": "onlocationcleared-REM",
		"body": "Event Location.OnLocationCleared(Location akSender)\r\n    ${0}\r\nEndEvent",
		"description": "Remote Location.OnLocationCleared",
		"scope": "source.papyrus"
	},
	"onlocationloaded-REM": {
		"prefix": "onlocationloaded-REM",
		"body": "Event Location.OnLocationLoaded(Location akSender)\r\n    ${0}\r\nEndEvent",
		"description": "Remote Location.OnLocationLoaded",
		"scope": "source.papyrus"
	},
	"getparent": {
		"prefix": "getparent",
		"body": "GetParent()${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"getencounterzone": {
		"prefix": "getencounterzone",
		"body": "GetEncounterZone(${1:bool abRecursive = False})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"setencounterzone": {
		"prefix": "setencounterzone",
		"body": "SetEncounterZone(${1:EncounterZone akZone})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	},
	"setparent": {
		"prefix": "setparent",
		"body": "SetParent(${1:Location akLocation})${0}",
		"description": "Location",
		"scope": "source.papyrus"
	}
}
