{
    "ObjectRef.Activate": {
        "prefix": "activate",
        "body": "Activate(${1:ObjectReference akActivator}, ${2:bool abDefaultProcessingOnly = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.AddItem": {
        "prefix": "additem",
        "body": "AddItem(${1:Form akItemToAdd}, ${2:int aiCount = 1}, ${3:bool abSilent = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.AddKeyIfNeeded": {
        "prefix": "addkeyifneeded",
        "body": "AddKeyIfNeeded(${1:ObjectReference ObjectWithNeededKey})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.AddKeyword": {
        "prefix": "addkeyword",
        "body": "AddKeyword(${1:Keyword akKeyword})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.AddTextReplacementData": {
        "prefix": "addtextreplacementdata",
        "body": "AddTextReplacementData(${1:string asTokenLabel}, ${2:Form akForm})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.AddToMap": {
        "prefix": "addtomap",
        "body": "AddToMap(${1:bool abFastTravel = False})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.ApplyConveyorBelt": {
        "prefix": "applyconveyorbelt",
        "body": "ApplyConveyorBelt(${1:string aTarget}, ${2:float aLinVelX}, ${3:float aLinVelY}, ${4:float aLinVelZ}, ${5:bool abOn = true}, ${6:bool abReverse = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.ApplyFanMotor": {
        "prefix": "applyfanmotor",
        "body": "ApplyFanMotor(${1:string aTarget}, ${2:float aAxisX}, ${3:float aAxisY}, ${4:float aAxisZ}, ${5:float aForce}, ${6:bool abOn = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.ApplyHavokImpulse": {
        "prefix": "applyhavokimpulse",
        "body": "ApplyHavokImpulse(${1:float afX}, ${2:float afY}, ${3:float afZ}, ${4:float afMagnitude})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.AttachMod": {
        "prefix": "attachmod",
        "body": "AttachMod(${1:ObjectMod akMod}, ${2:int aiAttachIndex = 1})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.AttachModToInventoryItem": {
        "prefix": "attachmodtoinventoryitem",
        "body": "AttachModToInventoryItem(${1:Form akItem}, ${2:ObjectMod akMod})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.AttachTo": {
        "prefix": "attachto",
        "body": "AttachTo(${1:ObjectReference akParent})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.BlockActivation": {
        "prefix": "blockactivation",
        "body": "BlockActivation(${1:bool abBlocked = True}, ${2:bool abHideActivateText = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.CalculateEncounterLevel": {
        "prefix": "calculateencounterlevel",
        "body": "CalculateEncounterLevel(${1:int aiDifficulty = 4})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.CanFastTravelToMarker": {
        "prefix": "canfasttraveltomarker",
        "body": "CanFastTravelToMarker()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.CanProduceForWorkshop": {
        "prefix": "canproduceforworkshop",
        "body": "CanProduceForWorkshop()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.ClearDestruction": {
        "prefix": "cleardestruction",
        "body": "ClearDestruction()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.ConveyorBeltOn": {
        "prefix": "conveyorbelton",
        "body": "ConveyorBeltOn(${1:bool abOn = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.CountActorsLinkedToMe": {
        "prefix": "countactorslinkedtome",
        "body": "CountActorsLinkedToMe(${1:apLinkKeyword = None}, ${2:apExcludeKeyword = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.CountLinkedRefChain": {
        "prefix": "countlinkedrefchain",
        "body": "CountLinkedRefChain(${1:keyword apKeyword = None}, ${2:int maxExpectedLinkedRefs = 100})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.CountRefsLinkedToMe": {
        "prefix": "countrefslinkedtome",
        "body": "CountRefsLinkedToMe(${1:Keyword apLinkKeyword = None}, ${2:Keyword apExcludeKeyword = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.CreateDetectionEvent": {
        "prefix": "createdetectionevent",
        "body": "CreateDetectionEvent(${1:Actor akOwner}, ${2:int aiSoundLevel = 0})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.DamageObject": {
        "prefix": "damageobject",
        "body": "DamageObject(${1:float afDamage})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.DamageValue": {
        "prefix": "damagevalue",
        "body": "DamageValue(${1:ActorValue akAV}, ${2:float afDamage})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.Delete": {
        "prefix": "delete",
        "body": "Delete()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.DeleteWhenAble": {
        "prefix": "deletewhenable",
        "body": "DeleteWhenAble()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.Disable": {
        "prefix": "disable",
        "body": "Disable(${1:bool abFadeOut = False})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.DisableLinkChain": {
        "prefix": "disablelinkchain",
        "body": "DisableLinkChain(${1:Keyword apKeyword = None}, ${2:bool abFadeOut = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.DisableNoWait": {
        "prefix": "disablenowait",
        "body": "DisableNoWait(${1:bool abFadeOut = False})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.Drop": {
        "prefix": "drop",
        "body": "Drop(${1:bool abSilent = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.DropFirstObject": {
        "prefix": "dropfirstobject",
        "body": "DropFirstObject(${1:bool abInitiallyDisabled=false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.DropObject": {
        "prefix": "dropobject",
        "body": "DropObject(${1:Form akObject}, ${2:int aiCount = 1})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.Enable": {
        "prefix": "enable",
        "body": "Enable(${1:bool abFadeIn = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.EnableFastTravel": {
        "prefix": "enablefasttravel",
        "body": "EnableFastTravel(${1:bool abEnable = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.EnableLinkChain": {
        "prefix": "enablelinkchain",
        "body": "EnableLinkChain(${1:Keyword apKeyword = None}, ${2:bool abFadeIn = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.EnableNoWait": {
        "prefix": "enablenowait",
        "body": "EnableNoWait(${1:bool abFadeIn = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.FanMotorOn": {
        "prefix": "fanmotoron",
        "body": "FanMotorOn(${1:bool abOn = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.FindAllReferencesOfType": {
        "prefix": "findallreferencesoftype",
        "body": "FindAllReferencesOfType(${1:Form arObjectOrList}, ${2:float afRadius})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.FindAllReferencesWithKeyword": {
        "prefix": "findallreferenceswithkeyword",
        "body": "FindAllReferencesWithKeyword(${1:Form arKeywordOrList}, ${2:float afRadius})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.ForceAddRagdollToWorld": {
        "prefix": "forceaddragdolltoworld",
        "body": "ForceAddRagdollToWorld()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.ForceRemoveRagdollFromWorld": {
        "prefix": "forceremoveragdollfromworld",
        "body": "ForceRemoveRagdollFromWorld()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetActorOwner": {
        "prefix": "getactorowner",
        "body": "GetActorOwner()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetActorRefOwner": {
        "prefix": "getactorrefowner",
        "body": "GetActorRefOwner()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetActorsLinkedToMe": {
        "prefix": "getactorslinkedtome",
        "body": "GetActorsLinkedToMe(${1:apLinkKeyword = None}, ${2:apExcludeKeyword = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetAngleX": {
        "prefix": "getanglex",
        "body": "GetAngleX()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetAngleY": {
        "prefix": "getangley",
        "body": "GetAngleY()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetAngleZ": {
        "prefix": "getanglez",
        "body": "GetAngleZ()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetAnimationVariableBool": {
        "prefix": "getanimationvariablebool",
        "body": "GetAnimationVariableBool(${1:string asVariableName})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetAnimationVariableFloat": {
        "prefix": "getanimationvariablefloat",
        "body": "GetAnimationVariableFloat(${1:string asVariableName})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetAnimationVariableInt": {
        "prefix": "getanimationvariableint",
        "body": "GetAnimationVariableInt(${1:string asVariableName})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetBaseObject": {
        "prefix": "getbaseobject",
        "body": "GetBaseObject()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetBaseValue": {
        "prefix": "getbasevalue",
        "body": "GetBaseValue(${1:ActorValue akAV})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetComponentCount": {
        "prefix": "getcomponentcount",
        "body": "GetComponentCount(${1:Form akItem = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetContainer": {
        "prefix": "getcontainer",
        "body": "GetContainer()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetCurrentDestructionStage": {
        "prefix": "getcurrentdestructionstage",
        "body": "GetCurrentDestructionStage()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetCurrentLocation": {
        "prefix": "getcurrentlocation",
        "body": "GetCurrentLocation()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetCurrentScene": {
        "prefix": "getcurrentscene",
        "body": "GetCurrentScene()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetDistance": {
        "prefix": "getdistance",
        "body": "GetDistance(${1:ObjectReference akOther})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetEditorLocation": {
        "prefix": "geteditorlocation",
        "body": "GetEditorLocation()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetEncounterZone": {
        "prefix": "getencounterzone",
        "body": "GetEncounterZone()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetFactionOwner": {
        "prefix": "getfactionowner",
        "body": "GetFactionOwner()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetHeadingAngle": {
        "prefix": "getheadingangle",
        "body": "GetHeadingAngle(${1:ObjectReference akOther})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetHeight": {
        "prefix": "getheight",
        "body": "GetHeight()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetInventoryValue": {
        "prefix": "getinventoryvalue",
        "body": "GetInventoryValue()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetItemCount": {
        "prefix": "getitemcount",
        "body": "GetItemCount(${1:Form akItem})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetItemHealthPercent": {
        "prefix": "getitemhealthpercent",
        "body": "GetItemHealthPercent()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetKey": {
        "prefix": "getkey",
        "body": "GetKey()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetLength": {
        "prefix": "getlength",
        "body": "GetLength()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetLinkedRef": {
        "prefix": "getlinkedref",
        "body": "GetLinkedRef(${1:Keyword apKeyword = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetLinkedRefChain": {
        "prefix": "getlinkedrefchain",
        "body": "GetLinkedRefChain(${1:keyword apKeyword = None}, ${2:int iMaxExpectedLinkedRefs = 100})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetLinkedRefChildren": {
        "prefix": "getlinkedrefchildren",
        "body": "GetLinkedRefChildren(${1:keyword apKeyword})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetLockLevel": {
        "prefix": "getlocklevel",
        "body": "GetLockLevel()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetLocRefTypes": {
        "prefix": "getlocreftypes",
        "body": "GetLocRefTypes()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetMass": {
        "prefix": "getmass",
        "body": "GetMass()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetNthLinkedRef": {
        "prefix": "getnthlinkedref",
        "body": "GetNthLinkedRef(${1:int aiLinkedRef}, ${2:Keyword apKeyword = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetOpenState": {
        "prefix": "getopenstate",
        "body": "GetOpenState()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetParentCell": {
        "prefix": "getparentcell",
        "body": "GetParentCell()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetPositionX": {
        "prefix": "getpositionx",
        "body": "GetPositionX()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetPositionY": {
        "prefix": "getpositiony",
        "body": "GetPositionY()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetPositionZ": {
        "prefix": "getpositionz",
        "body": "GetPositionZ()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetRadioFrequency": {
        "prefix": "getradiofrequency",
        "body": "GetRadioFrequency()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetRadioVolume": {
        "prefix": "getradiovolume",
        "body": "GetRadioVolume()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetRefsLinkedToMe": {
        "prefix": "getrefslinkedtome",
        "body": "GetRefsLinkedToMe(${1:Keyword apLinkKeyword = None}, ${2:Keyword apExcludeKeyword = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetResourceDamage": {
        "prefix": "getresourcedamage",
        "body": "GetResourceDamage(${1:ActorValue akAV = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetSafePosition": {
        "prefix": "getsafeposition",
        "body": "GetSafePosition(${1:float aSearchRadius=-1}, ${2:float aSafeRadius=-1})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetScale": {
        "prefix": "getscale",
        "body": "GetScale()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetTeleportCell": {
        "prefix": "getteleportcell",
        "body": "GetTeleportCell()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetTransitionCell": {
        "prefix": "gettransitioncell",
        "body": "GetTransitionCell()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetTransmitterDistance": {
        "prefix": "gettransmitterdistance",
        "body": "GetTransmitterDistance()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetTriggerObjectCount": {
        "prefix": "gettriggerobjectcount",
        "body": "GetTriggerObjectCount()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetValue": {
        "prefix": "getvalue",
        "body": "GetValue(${1:ActorValue akAV})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetValuePercentage": {
        "prefix": "getvaluepercentage",
        "body": "GetValuePercentage(${1:ActorValue akAV})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetVoiceType": {
        "prefix": "getvoicetype",
        "body": "GetVoiceType()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetWidth": {
        "prefix": "getwidth",
        "body": "GetWidth()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetWorkshopOwnedObjects": {
        "prefix": "getworkshopownedobjects",
        "body": "GetWorkshopOwnedObjects(${1:Actor akActor})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetWorkshopResourceDamage": {
        "prefix": "getworkshopresourcedamage",
        "body": "GetWorkshopResourceDamage(${1:ActorValue akAV = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetWorkshopResourceObjects": {
        "prefix": "getworkshopresourceobjects",
        "body": "GetWorkshopResourceObjects(${1:ActorValue akAV = None}, ${2:int aiOption=0})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetWorldSpace": {
        "prefix": "getworldspace",
        "body": "GetWorldSpace()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.HasActorRefOwner": {
        "prefix": "hasactorrefowner",
        "body": "HasActorRefOwner()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.HasDirectLOS": {
        "prefix": "hasdirectlos",
        "body": "HasDirectLOS(${1:ObjectReference akTarget}, ${2:string asSourceNode = \\\"\\\"}, ${3:string asTargetNode = \\\"\\\"})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.HasEffectKeyword": {
        "prefix": "haseffectkeyword",
        "body": "HasEffectKeyword(${1:Keyword akKeyword})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.HasKeyword": {
        "prefix": "haskeyword",
        "body": "HasKeyword(${1:Keyword akKeyword})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.HasKeywordInFormList": {
        "prefix": "haskeywordinformlist",
        "body": "HasKeywordInFormList(${1:FormList akKeywordList})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.HasLocRefType": {
        "prefix": "haslocreftype",
        "body": "HasLocRefType(${1:LocationRefType akRefType})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.HasNode": {
        "prefix": "hasnode",
        "body": "HasNode(${1:string asNodeName})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.HasOwner": {
        "prefix": "hasowner",
        "body": "HasOwner()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.HasSharedPowerGrid": {
        "prefix": "hassharedpowergrid",
        "body": "HasSharedPowerGrid(${1:ObjectReference akChild})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IgnoreFriendlyHits": {
        "prefix": "ignorefriendlyhits",
        "body": "IgnoreFriendlyHits(${1:bool abIgnore = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.InterruptCast": {
        "prefix": "interruptcast",
        "body": "InterruptCast()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.Is3DLoaded": {
        "prefix": "is3dloaded",
        "body": "Is3DLoaded()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsActivateChild": {
        "prefix": "isactivatechild",
        "body": "IsActivateChild(${1:ObjectReference akChild})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsActivationBlocked": {
        "prefix": "isactivationblocked",
        "body": "IsActivationBlocked()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsConveyorBeltOn": {
        "prefix": "isconveyorbelton",
        "body": "IsConveyorBeltOn()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsCreated": {
        "prefix": "iscreated",
        "body": "IsCreated()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsDeleted": {
        "prefix": "isdeleted",
        "body": "IsDeleted()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsDestroyed": {
        "prefix": "isdestroyed",
        "body": "IsDestroyed()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsDisabled": {
        "prefix": "isdisabled",
        "body": "IsDisabled()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsEnabled": {
        "prefix": "isenabled",
        "body": "IsEnabled()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsFanMotorOn": {
        "prefix": "isfanmotoron",
        "body": "IsFanMotorOn()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsFurnitureInUse": {
        "prefix": "isfurnitureinuse",
        "body": "IsFurnitureInUse(${1:bool abIgnoreReserved = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsFurnitureMarkerInUse": {
        "prefix": "isfurnituremarkerinuse",
        "body": "IsFurnitureMarkerInUse(${1:int aiMarker}, ${2:bool abIgnoreReserved = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsIgnoringFriendlyHits": {
        "prefix": "isignoringfriendlyhits",
        "body": "IsIgnoringFriendlyHits()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsInDialogueWithPlayer": {
        "prefix": "isindialoguewithplayer",
        "body": "IsInDialogueWithPlayer()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsInInterior": {
        "prefix": "isininterior",
        "body": "IsInInterior()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsInLocation": {
        "prefix": "isinlocation",
        "body": "IsInLocation(${1:Location akLocation})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsLockBroken": {
        "prefix": "islockbroken",
        "body": "IsLockBroken()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsLocked": {
        "prefix": "islocked",
        "body": "IsLocked()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsMapMarkerVisible": {
        "prefix": "ismapmarkervisible",
        "body": "IsMapMarkerVisible()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsNearPlayer": {
        "prefix": "isnearplayer",
        "body": "IsNearPlayer()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsOwnedBy": {
        "prefix": "isownedby",
        "body": "IsOwnedBy(${1:Actor akOwner})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsPowered": {
        "prefix": "ispowered",
        "body": "IsPowered()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsQuestItem": {
        "prefix": "isquestitem",
        "body": "IsQuestItem()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsRadioOn": {
        "prefix": "isradioon",
        "body": "IsRadioOn()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsRefInTransitionCell": {
        "prefix": "isrefintransitioncell",
        "body": "IsRefInTransitionCell(${1:ObjectReference akRef})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsTeleportAreaLoaded": {
        "prefix": "isteleportarealoaded",
        "body": "IsTeleportAreaLoaded()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.IsWithinBuildableArea": {
        "prefix": "iswithinbuildablearea",
        "body": "IsWithinBuildableArea(${1:ObjectReference akRef})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.KnockAreaEffect": {
        "prefix": "knockareaeffect",
        "body": "KnockAreaEffect(${1:float afMagnitude}, ${2:float afRadius})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.Lock": {
        "prefix": "lock",
        "body": "Lock(${1:bool abLock = true}, ${2:bool abAsOwner = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.MakeRadioReceiver": {
        "prefix": "makeradioreceiver",
        "body": "MakeRadioReceiver(${1:float afFrequency}, ${2:float afVolume = 1.0}, ${3:OutputModel aOverrideModel = None}, ${4:bool abActive = true}, ${5:bool abNoStatic = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.MakeTransmitterRepeater": {
        "prefix": "maketransmitterrepeater",
        "body": "MakeTransmitterRepeater(${1:ObjectReference akTransmitterToRepeat}, ${2:float afInnerRadius}, ${3:float afOuterRadius}, ${4:bool abUnlimitedRange = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.ModValue": {
        "prefix": "modvalue",
        "body": "ModValue(${1:ActorValue akAV}, ${2:float afAmount})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.MoveTo": {
        "prefix": "moveto",
        "body": "MoveTo(${1:ObjectReference akTarget}, ${2:float afXOffset = 0.0}, ${3:float afYOffset = 0.0}, ${4:float afZOffset = 0.0}, ${5:bool abMatchRotation = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.MoveToIfUnloaded": {
        "prefix": "movetoifunloaded",
        "body": "MoveToIfUnloaded(${1:ObjectReference akTarget}, ${2:float afXOffset = 0.0}, ${3:float afYOffset = 0.0}, ${4:float afZOffset = 0.0})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.MoveToMyEditorLocation": {
        "prefix": "movetomyeditorlocation",
        "body": "MoveToMyEditorLocation()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.MoveToNearestNavmeshLocation": {
        "prefix": "movetonearestnavmeshlocation",
        "body": "MoveToNearestNavmeshLocation()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.MoveToNode": {
        "prefix": "movetonode",
        "body": "MoveToNode(${1:ObjectReference akTarget}, ${2:string asNodeName}, ${3:string asMatchNodeName = \\\"\\\"})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.OnActivate": {
        "prefix": "onactivate",
        "body": "Event OnActivate(ObjectReference akActionRef)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnActivate"
    },
    "ObjectRef.OnCellAttach": {
        "prefix": "oncellattach",
        "body": "Event OnCellAttach()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnCellAttach"
    },
    "ObjectRef.OnCellDetach": {
        "prefix": "oncelldetach",
        "body": "Event OnCellDetach()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnCellDetach"
    },
    "ObjectRef.OnCellLoad": {
        "prefix": "oncellload",
        "body": "Event OnCellLoad()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnCellLoad"
    },
    "ObjectRef.OnClose": {
        "prefix": "onclose",
        "body": "Event OnClose(ObjectReference akActionRef)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnClose"
    },
    "ObjectRef.OnContainerChanged": {
        "prefix": "oncontainerchanged",
        "body": "Event OnContainerChanged(ObjectReference akNewContainer, ObjectReference akOldContainer)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnContainerChanged"
    },
    "ObjectRef.OnDestructionStageChanged": {
        "prefix": "ondestructionstagechanged",
        "body": "Event OnDestructionStageChanged(int aiOldStage, int aiCurrentStage)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnDestructionStageChanged"
    },
    "ObjectRef.OnEquipped": {
        "prefix": "onequipped",
        "body": "Event OnEquipped(Actor akActor)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnEquipped"
    },
    "ObjectRef.OnExitFurniture": {
        "prefix": "onexitfurniture",
        "body": "Event OnExitFurniture(ObjectReference akActionRef)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnExitFurniture"
    },
    "ObjectRef.OnGrab": {
        "prefix": "ongrab",
        "body": "Event OnGrab()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnGrab"
    },
    "ObjectRef.OnHolotapeChatter": {
        "prefix": "onholotapechatter",
        "body": "Event OnHolotapeChatter( string astrChatter, float afNumericData )\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnHolotapeChatter"
    },
    "ObjectRef.OnHolotapePlay": {
        "prefix": "onholotapeplay",
        "body": "Event OnHolotapePlay(ObjectReference akTerminalRef)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnHolotapePlay"
    },
    "ObjectRef.OnItemAdded": {
        "prefix": "onitemadded",
        "body": "Event OnItemAdded(Form akBaseItem, int aiItemCount, ObjectReference akItemReference, ObjectReference akSourceContainer)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnItemAdded"
    },
    "ObjectRef.OnItemRemoved": {
        "prefix": "onitemremoved",
        "body": "Event OnItemRemoved(Form akBaseItem, int aiItemCount, ObjectReference akItemReference, ObjectReference akDestContainer)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnItemRemoved"
    },
    "ObjectRef.OnLoad": {
        "prefix": "onload",
        "body": "Event OnLoad()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnLoad"
    },
    "ObjectRef.OnLockStateChanged": {
        "prefix": "onlockstatechanged",
        "body": "Event OnLockStateChanged()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnLockStateChanged"
    },
    "ObjectRef.OnOpen": {
        "prefix": "onopen",
        "body": "Event OnOpen(ObjectReference akActionRef)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnOpen"
    },
    "ObjectRef.OnPipboyRadioDetection": {
        "prefix": "onpipboyradiodetection",
        "body": "Event OnPipboyRadioDetection(bool abDetected)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnPipboyRadioDetection"
    },
    "ObjectRef.OnPlayerDialogueTarget": {
        "prefix": "onplayerdialoguetarget",
        "body": "Event OnPlayerDialogueTarget()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnPlayerDialogueTarget"
    },
    "ObjectRef.OnPowerOff": {
        "prefix": "onpoweroff",
        "body": "Event OnPowerOff()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnPowerOff"
    },
    "ObjectRef.OnPowerOn": {
        "prefix": "onpoweron",
        "body": "Event OnPowerOn(ObjectReference akPowerGenerator)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnPowerOn"
    },
    "ObjectRef.OnRead": {
        "prefix": "onread",
        "body": "Event OnRead()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnRead"
    },
    "ObjectRef.OnRelease": {
        "prefix": "onrelease",
        "body": "Event OnRelease()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnRelease"
    },
    "ObjectRef.OnReset": {
        "prefix": "onreset",
        "body": "Event OnReset()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnReset"
    },
    "ObjectRef.OnSell": {
        "prefix": "onsell",
        "body": "Event OnSell(Actor akSeller)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnSell"
    },
    "ObjectRef.OnSpellCast": {
        "prefix": "onspellcast",
        "body": "Event OnSpellCast(Form akSpell)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnSpellCast"
    },
    "ObjectRef.OnTranslationAlmostComplete": {
        "prefix": "ontranslationalmostcomplete",
        "body": "Event OnTranslationAlmostComplete()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnTranslationAlmostComplete"
    },
    "ObjectRef.OnTranslationComplete": {
        "prefix": "ontranslationcomplete",
        "body": "Event OnTranslationComplete()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnTranslationComplete"
    },
    "ObjectRef.OnTranslationFailed": {
        "prefix": "ontranslationfailed",
        "body": "Event OnTranslationFailed()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnTranslationFailed"
    },
    "ObjectRef.OnTrapHitStart": {
        "prefix": "ontraphitstart",
        "body": "Event OnTrapHitStart(ObjectReference akTarget, float afXVel, float afYVel, float afZVel, float afXPos, float afYPos, \\\r\n    float afZPos, int aeMaterial, bool abInitialHit, int aeMotionType)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnTrapHitStart"
    },
    "ObjectRef.OnTrapHitStop": {
        "prefix": "ontraphitstop",
        "body": "Event OnTrapHitStop(ObjectReference akTarget)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnTrapHitStop"
    },
    "ObjectRef.OnTriggerEnter": {
        "prefix": "ontriggerenter",
        "body": "Event OnTriggerEnter(ObjectReference akActionRef)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnTriggerEnter"
    },
    "ObjectRef.OnTriggerLeave": {
        "prefix": "ontriggerleave",
        "body": "Event OnTriggerLeave(ObjectReference akActionRef)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnTriggerLeave"
    },
    "ObjectRef.OnUnequipped": {
        "prefix": "onunequipped",
        "body": "Event OnUnequipped(Actor akActor)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnUnequipped"
    },
    "ObjectRef.OnUnload": {
        "prefix": "onunload",
        "body": "Event OnUnload()\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnUnload"
    },
    "ObjectRef.OnWorkshopMode": {
        "prefix": "onworkshopmode",
        "body": "Event OnWorkshopMode(bool aStart)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnWorkshopMode"
    },
    "ObjectRef.OnWorkshopNPCTransfer": {
        "prefix": "onworkshopnpctransfer",
        "body": "Event OnWorkshopNPCTransfer(Location akNewWorkshop, Keyword akActionKW)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnWorkshopNPCTransfer"
    },
    "ObjectRef.OnWorkshopObjectDestroyed": {
        "prefix": "onworkshopobjectdestroyed",
        "body": "Event OnWorkshopObjectDestroyed(ObjectReference akActionRef)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnWorkshopObjectDestroyed"
    },
    "ObjectRef.OnWorkshopObjectGrabbed": {
        "prefix": "onworkshopobjectgrabbed",
        "body": "Event OnWorkshopObjectGrabbed(ObjectReference akReference)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnWorkshopObjectGrabbed"
    },
    "ObjectRef.OnWorkshopObjectMoved": {
        "prefix": "onworkshopobjectmoved",
        "body": "Event OnWorkshopObjectMoved(ObjectReference akReference)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnWorkshopObjectMoved"
    },
    "ObjectRef.OnWorkshopObjectPlaced": {
        "prefix": "onworkshopobjectplaced",
        "body": "Event OnWorkshopObjectPlaced(ObjectReference akReference)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnWorkshopObjectPlaced"
    },
    "ObjectRef.OnWorkshopObjectRepaired": {
        "prefix": "onworkshopobjectrepaired",
        "body": "Event OnWorkshopObjectRepaired(ObjectReference akReference)\r\n    ${0}\r\nEndEvent",
        "description": "Event ObjectReference.OnWorkshopObjectRepaired"
    },
    "ObjectRef.OpenWorkshopSettlementMenu": {
        "prefix": "openworkshopsettlementmenu",
        "body": "OpenWorkshopSettlementMenu(${1:Keyword akActionKW}, ${2:Message astrConfirm = None}, ${3:Location aLocToHighlight = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.OpenWorkshopSettlementMenuEx": {
        "prefix": "openworkshopsettlementmenuex",
        "body": "OpenWorkshopSettlementMenuEx(${1:Keyword akActionKW}, ${2:Message astrConfirm = None}, ${3:Location aLocToHighlight = None}, ${4:FormList akIncludeKeywordList = None}, ${5:FormList akExcludeKeywordList = None}, ${6:bool abExcludeZeroPopulation = false}, ${7:bool abOnlyOwnedWorkshops= true}, ${8:bool abTurnOffHeader= false}, ${9:bool abOnlyPotentialVassalSettlements= false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.PauseAudio": {
        "prefix": "pauseaudio",
        "body": "PauseAudio()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.PlaceActorAtMe": {
        "prefix": "placeactoratme",
        "body": "PlaceActorAtMe(${1:ActorBase akActorToPlace}, ${2:int aiLevelMod = 4}, ${3:EncounterZone akZone = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.PlaceAtMe": {
        "prefix": "placeatme",
        "body": "PlaceAtMe(${1:Form akFormToPlace}, ${2:int aiCount = 1}, ${3:bool abForcePersist = false}, ${4:bool abInitiallyDisabled = false}, ${5:bool abDeleteWhenAble = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.PlaceAtNode": {
        "prefix": "placeatnode",
        "body": "PlaceAtNode(${1:string asNodeName}, ${2:Form akFormToPlace}, ${3:int aiCount = 1}, ${4:bool abForcePersist = false}, ${5:bool abInitiallyDisabled = false}, ${6:bool abDeleteWhenAble = true}, ${7:bool abAttach = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.PlayAnimation": {
        "prefix": "playanimation",
        "body": "PlayAnimation(${1:string asAnimation})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.PlayAnimationAndWait": {
        "prefix": "playanimationandwait",
        "body": "PlayAnimationAndWait(${1:string asAnimation}, ${2:string asEventName})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.PlayGamebryoAnimation": {
        "prefix": "playgamebryoanimation",
        "body": "PlayGamebryoAnimation(${1:string asAnimation}, ${2:bool abStartOver = false}, ${3:float afEaseInTime = 0.0})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.PlayImpactEffect": {
        "prefix": "playimpacteffect",
        "body": "PlayImpactEffect(${1:ImpactDataSet akImpactEffect}, ${2:string asNodeName = \\\"\\\"}, ${3:float afPickDirX = 0.0}, ${4:float afPickDirY = 0.0}, ${5:float afPickDirZ = -1.0}, ${6:float afPickLength = 512.0}, ${7:bool abApplyNodeRotation = false}, ${8:bool abUseNodeLocalRotation = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.PlaySyncedAnimationAndWaitSS": {
        "prefix": "playsyncedanimationandwaitss",
        "body": "PlaySyncedAnimationAndWaitSS(${1:string asAnimation1}, ${2:string asEvent1}, ${3:ObjectReference akObj2}, ${4:string asAnimation2}, ${5:string asEvent2})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.PlaySyncedAnimationSS": {
        "prefix": "playsyncedanimationss",
        "body": "PlaySyncedAnimationSS(${1:string asAnimation1}, ${2:ObjectReference akObj2}, ${3:string asAnimation2})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.PlayTerrainEffect": {
        "prefix": "playterraineffect",
        "body": "PlayTerrainEffect(${1:string asEffectModelName}, ${2:string asAttachBoneName})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.PreloadExteriorCell": {
        "prefix": "preloadexteriorcell",
        "body": "PreloadExteriorCell()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.PreloadTargetArea": {
        "prefix": "preloadtargetarea",
        "body": "PreloadTargetArea()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.ProcessTrapHit": {
        "prefix": "processtraphit",
        "body": "ProcessTrapHit(${1:ObjectReference akTrap}, ${2:float afDamage}, ${3:float afPushback}, ${4:float afXVel}, ${5:float afYVel}, ${6:float afZVel}, ${7:float afXPos}, ${8:float afYPos}, ${9:float afZPos}, ${10:int aeMaterial}, ${11:float afStagger})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.PushActorAway": {
        "prefix": "pushactoraway",
        "body": "PushActorAway(${1:Actor akActorToPush}, ${2:float afKnockbackForce})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.RampRumble": {
        "prefix": "ramprumble",
        "body": "RampRumble(${1:float power = 0.5}, ${2:float duration = 0.25}, ${3:float falloff = 1600.0})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.RecalculateResources": {
        "prefix": "recalculateresources",
        "body": "RecalculateResources()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.RemoveAllItems": {
        "prefix": "removeallitems",
        "body": "RemoveAllItems(${1:ObjectReference akTransferTo = None}, ${2:bool abKeepOwnership = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.RemoveAllMods": {
        "prefix": "removeallmods",
        "body": "RemoveAllMods()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.RemoveAllModsFromInventoryItem": {
        "prefix": "removeallmodsfrominventoryitem",
        "body": "RemoveAllModsFromInventoryItem(${1:Form akItem})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.RemoveComponents": {
        "prefix": "removecomponents",
        "body": "RemoveComponents(${1:Component akComponent}, ${2:int aiCount}, ${3:bool abSilent = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.RemoveItem": {
        "prefix": "removeitem",
        "body": "RemoveItem(${1:Form akItemToRemove}, ${2:int aiCount = 1}, ${3:bool abSilent = false}, ${4:ObjectReference akOtherContainer = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.RemoveItemByComponent": {
        "prefix": "removeitembycomponent",
        "body": "RemoveItemByComponent(${1:Form akComponentToRemove}, ${2:int aiCount = 1}, ${3:bool abSilent = false}, ${4:ObjectReference akOtherContainer = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.RemoveKeyword": {
        "prefix": "removekeyword",
        "body": "RemoveKeyword(${1:Keyword akKeyword})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.RemoveMod": {
        "prefix": "removemod",
        "body": "RemoveMod(${1:ObjectMod akMod})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.RemoveModFromInventoryItem": {
        "prefix": "removemodfrominventoryitem",
        "body": "RemoveModFromInventoryItem(${1:Form akItem}, ${2:ObjectMod akMod})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.Repair": {
        "prefix": "repair",
        "body": "Repair()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.Reset": {
        "prefix": "reset",
        "body": "Reset(${1:ObjectReference akTarget = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.ResetKeyword": {
        "prefix": "resetkeyword",
        "body": "ResetKeyword(${1:Keyword akKeyword})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.RestoreValue": {
        "prefix": "restorevalue",
        "body": "RestoreValue(${1:ActorValue akAV}, ${2:float afAmount})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.ResumeAudio": {
        "prefix": "resumeaudio",
        "body": "ResumeAudio()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.ReverseConveyorBelt": {
        "prefix": "reverseconveyorbelt",
        "body": "ReverseConveyorBelt(${1:bool abReverse = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.Say": {
        "prefix": "say",
        "body": "Say(${1:Topic akTopicToSay}, ${2:Actor akActorToSpeakAs = None}, ${3:bool abSpeakInPlayersHead = false}, ${4:ObjectReference akTarget = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SayCustom": {
        "prefix": "saycustom",
        "body": "SayCustom(${1:Keyword akKeywordToSay}, ${2:Actor akActorToSpeakAs = None}, ${3:bool abSpeakInPlayersHead = false}, ${4:ObjectReference akTarget = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SellItem": {
        "prefix": "sellitem",
        "body": "SellItem(${1:Form Item}, ${2:int Value}, ${3:int amountToSell = -1}, ${4:bool silent = false}, ${5:form paymentItem = none}, ${6:objectReference PaymentContainer = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SendStealAlarm": {
        "prefix": "sendstealalarm",
        "body": "SendStealAlarm(${1:Actor akThief})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetActivateTextOverride": {
        "prefix": "setactivatetextoverride",
        "body": "SetActivateTextOverride(${1:Message akText})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetActorCause": {
        "prefix": "setactorcause",
        "body": "SetActorCause(${1:Actor akActor})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetActorOwner": {
        "prefix": "setactorowner",
        "body": "SetActorOwner(${1:ActorBase akActorBase}, ${2:bool abNoCrime = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetActorRefOwner": {
        "prefix": "setactorrefowner",
        "body": "SetActorRefOwner(${1:Actor akActor}, ${2:bool abNoCrime = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetAngle": {
        "prefix": "setangle",
        "body": "SetAngle(${1:float afXAngle}, ${2:float afYAngle}, ${3:float afZAngle})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetAnimationVariableBool": {
        "prefix": "setanimationvariablebool",
        "body": "SetAnimationVariableBool(${1:string asVariableName}, ${2:bool abNewValue})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetAnimationVariableFloat": {
        "prefix": "setanimationvariablefloat",
        "body": "SetAnimationVariableFloat(${1:string asVariableName}, ${2:float afNewValue})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetAnimationVariableInt": {
        "prefix": "setanimationvariableint",
        "body": "SetAnimationVariableInt(${1:string asVariableName}, ${2:int aiNewValue})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetAttractionActive": {
        "prefix": "setattractionactive",
        "body": "SetAttractionActive(${1:Keyword apKeyword}, ${2:bool abActive = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetConveyorBeltVelocity": {
        "prefix": "setconveyorbeltvelocity",
        "body": "SetConveyorBeltVelocity(${1:float afLinVelX}, ${2:float afLinVelY}, ${3:float afLinVelZ})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetDestroyed": {
        "prefix": "setdestroyed",
        "body": "SetDestroyed(${1:bool abDestroyed = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetDirectAtTarget": {
        "prefix": "setdirectattarget",
        "body": "SetDirectAtTarget(${1:ObjectReference akTarget})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetFactionOwner": {
        "prefix": "setfactionowner",
        "body": "SetFactionOwner(${1:Faction akFaction}, ${2:bool abNoCrime = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetHarvested": {
        "prefix": "setharvested",
        "body": "SetHarvested(${1:bool abHarvested})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetLinkedRef": {
        "prefix": "setlinkedref",
        "body": "SetLinkedRef(${1:ObjectReference apRef}, ${2:Keyword apKeyword = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetLockLevel": {
        "prefix": "setlocklevel",
        "body": "SetLockLevel(${1:int aiLockLevel})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetLocRefType": {
        "prefix": "setlocreftype",
        "body": "SetLocRefType(${1:Location akLoc}, ${2:LocationRefType akRefType})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetMotionType": {
        "prefix": "setmotiontype",
        "body": "SetMotionType(${1:int aiMotionType}, ${2:bool abAllowActivate = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetNoFavorAllowed": {
        "prefix": "setnofavorallowed",
        "body": "SetNoFavorAllowed(${1:bool abNoFavor = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetOpen": {
        "prefix": "setopen",
        "body": "SetOpen(${1:bool abOpen = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetPersistLoc": {
        "prefix": "setpersistloc",
        "body": "SetPersistLoc(${1:Location akLoc})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetPlayerHasTaken": {
        "prefix": "setplayerhastaken",
        "body": "SetPlayerHasTaken(${1:bool abTaken = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetPosition": {
        "prefix": "setposition",
        "body": "SetPosition(${1:float afX}, ${2:float afY}, ${3:float afZ})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetRadioFrequency": {
        "prefix": "setradiofrequency",
        "body": "SetRadioFrequency(${1:float afFrequency})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetRadioOn": {
        "prefix": "setradioon",
        "body": "SetRadioOn(${1:bool abOn = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetRadioVolume": {
        "prefix": "setradiovolume",
        "body": "SetRadioVolume(${1:float afVolume})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetScale": {
        "prefix": "setscale",
        "body": "SetScale(${1:float afScale})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SetValue": {
        "prefix": "setvalue",
        "body": "SetValue(${1:ActorValue akAV}, ${2:float afValue})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SplineTranslateTo": {
        "prefix": "splinetranslateto",
        "body": "SplineTranslateTo(${1:float afX}, ${2:float afY}, ${3:float afZ}, ${4:float afAngleX}, ${5:float afAngleY}, ${6:float afAngleZ}, ${7:float afTangentMagnitude}, ${8:float afSpeed}, ${9:float afMaxRotationSpeed = 0.0})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SplineTranslateToRef": {
        "prefix": "splinetranslatetoref",
        "body": "SplineTranslateToRef(${1:ObjectReference arTarget}, ${2:float afTangentMagnitude}, ${3:float afSpeed}, ${4:float afMaxRotationSpeed = 0.0})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.SplineTranslateToRefNode": {
        "prefix": "splinetranslatetorefnode",
        "body": "SplineTranslateToRefNode(${1:ObjectReference arTarget}, ${2:string arNodeName}, ${3:float afTangentMagnitude}, ${4:float afSpeed}, ${5:float afMaxRotationSpeed = 0.0})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.StartWorkshop": {
        "prefix": "startworkshop",
        "body": "StartWorkshop(${1:bool abStart = true})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.StopTranslation": {
        "prefix": "stoptranslation",
        "body": "StopTranslation()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.StoreInWorkshop": {
        "prefix": "storeinworkshop",
        "body": "StoreInWorkshop(${1:Form akBaseItem}, ${2:int aiCount = 1})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.TetherToHorse": {
        "prefix": "tethertohorse",
        "body": "TetherToHorse(${1:ObjectReference akHorse})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.TranslateTo": {
        "prefix": "translateto",
        "body": "TranslateTo(${1:float afX}, ${2:float afY}, ${3:float afZ}, ${4:float afAngleX}, ${5:float afAngleY}, ${6:float afAngleZ}, ${7:float afSpeed}, ${8:float afMaxRotationSpeed = 0.0})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.TranslateToRef": {
        "prefix": "translatetoref",
        "body": "TranslateToRef(${1:ObjectReference arTarget}, ${2:float afSpeed}, ${3:float afMaxRotationSpeed = 0.0})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.Unlock": {
        "prefix": "unlock",
        "body": "Unlock(${1:bool abAsOwner = false})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.WaitFor3DLoad": {
        "prefix": "waitfor3dload",
        "body": "WaitFor3DLoad()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.WaitForAnimationEvent": {
        "prefix": "waitforanimationevent",
        "body": "WaitForAnimationEvent(${1:string asEventName})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.WaitForWorkshopResourceRecalc": {
        "prefix": "waitforworkshopresourcerecalc",
        "body": "WaitForWorkshopResourceRecalc()${0}",
        "description": "ObjectReference"
    },
    "Remote ObjectRef.OnActivate": {
        "prefix": "onactivate-REM",
        "body": "Event ObjectReference.OnActivate(ObjectReference akSender, ObjectReference akActionRef)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnActivate"
    },
    "Remote ObjectRef.OnCellAttach": {
        "prefix": "oncellattach-REM",
        "body": "Event ObjectReference.OnCellAttach(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnCellAttach"
    },
    "Remote ObjectRef.OnCellDetach": {
        "prefix": "oncelldetach-REM",
        "body": "Event ObjectReference.OnCellDetach(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnCellDetach"
    },
    "Remote ObjectRef.OnCellLoad": {
        "prefix": "oncellload-REM",
        "body": "Event ObjectReference.OnCellLoad(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnCellLoad"
    },
    "Remote ObjectRef.OnClose": {
        "prefix": "onclose-REM",
        "body": "Event ObjectReference.OnClose(ObjectReference akSender, ObjectReference akActionRef)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnClose"
    },
    "Remote ObjectRef.OnContainerChanged": {
        "prefix": "oncontainerchanged-REM",
        "body": "Event ObjectReference.OnContainerChanged(ObjectReference akSender, ObjectReference akNewContainer, ObjectReference akOldContainer)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnContainerChanged"
    },
    "Remote ObjectRef.OnDestructionStageChanged": {
        "prefix": "ondestructionstagechanged-REM",
        "body": "Event ObjectReference.OnDestructionStageChanged(ObjectReference akSender, int aiOldStage, int aiCurrentStage)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnDestructionStageChanged"
    },
    "Remote ObjectRef.OnEquipped": {
        "prefix": "onequipped-REM",
        "body": "Event ObjectReference.OnEquipped(ObjectReference akSender, Actor akActor)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnEquipped"
    },
    "Remote ObjectRef.OnExitFurniture": {
        "prefix": "onexitfurniture-REM",
        "body": "Event ObjectReference.OnExitFurniture(ObjectReference akSender, ObjectReference akActionRef)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnExitFurniture"
    },
    "Remote ObjectRef.OnGrab": {
        "prefix": "ongrab-REM",
        "body": "Event ObjectReference.OnGrab(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnGrab"
    },
    "Remote ObjectRef.OnHolotapeChatter": {
        "prefix": "onholotapechatter-REM",
        "body": "Event ObjectReference.OnHolotapeChatter(ObjectReference akSender, string astrChatter, float afNumericData )\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnHolotapeChatter"
    },
    "Remote ObjectRef.OnHolotapePlay": {
        "prefix": "onholotapeplay-REM",
        "body": "Event ObjectReference.OnHolotapePlay(ObjectReference akSender, ObjectReference akTerminalRef)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnHolotapePlay"
    },
    "Remote ObjectRef.OnItemAdded": {
        "prefix": "onitemadded-REM",
        "body": "Event ObjectReference.OnItemAdded(ObjectReference akSender, Form akBaseItem, int aiItemCount, ObjectReference akItemReference, ObjectReference akSourceContainer)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnItemAdded"
    },
    "Remote ObjectRef.OnItemRemoved": {
        "prefix": "onitemremoved-REM",
        "body": "Event ObjectReference.OnItemRemoved(ObjectReference akSender, Form akBaseItem, int aiItemCount, ObjectReference akItemReference, ObjectReference akDestContainer)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnItemRemoved"
    },
    "Remote ObjectRef.OnLoad": {
        "prefix": "onload-REM",
        "body": "Event ObjectReference.OnLoad(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnLoad"
    },
    "Remote ObjectRef.OnLockStateChanged": {
        "prefix": "onlockstatechanged-REM",
        "body": "Event ObjectReference.OnLockStateChanged(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnLockStateChanged"
    },
    "Remote ObjectRef.OnOpen": {
        "prefix": "onopen-REM",
        "body": "Event ObjectReference.OnOpen(ObjectReference akSender, ObjectReference akActionRef)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnOpen"
    },
    "Remote ObjectRef.OnPipboyRadioDetection": {
        "prefix": "onpipboyradiodetection-REM",
        "body": "Event ObjectReference.OnPipboyRadioDetection(ObjectReference akSender, bool abDetected)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnPipboyRadioDetection"
    },
    "Remote ObjectRef.OnPlayerDialogueTarget": {
        "prefix": "onplayerdialoguetarget-REM",
        "body": "Event ObjectReference.OnPlayerDialogueTarget(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnPlayerDialogueTarget"
    },
    "Remote ObjectRef.OnPowerOff": {
        "prefix": "onpoweroff-REM",
        "body": "Event ObjectReference.OnPowerOff(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnPowerOff"
    },
    "Remote ObjectRef.OnPowerOn": {
        "prefix": "onpoweron-REM",
        "body": "Event ObjectReference.OnPowerOn(ObjectReference akSender, ObjectReference akPowerGenerator)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnPowerOn"
    },
    "Remote ObjectRef.OnRead": {
        "prefix": "onread-REM",
        "body": "Event ObjectReference.OnRead(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnRead"
    },
    "Remote ObjectRef.OnRelease": {
        "prefix": "onrelease-REM",
        "body": "Event ObjectReference.OnRelease(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnRelease"
    },
    "Remote ObjectRef.OnReset": {
        "prefix": "onreset-REM",
        "body": "Event ObjectReference.OnReset(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnReset"
    },
    "Remote ObjectRef.OnSell": {
        "prefix": "onsell-REM",
        "body": "Event ObjectReference.OnSell(ObjectReference akSender, Actor akSeller)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnSell"
    },
    "Remote ObjectRef.OnSpellCast": {
        "prefix": "onspellcast-REM",
        "body": "Event ObjectReference.OnSpellCast(ObjectReference akSender, Form akSpell)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnSpellCast"
    },
    "Remote ObjectRef.OnTranslationAlmostComplete": {
        "prefix": "ontranslationalmostcomplete-REM",
        "body": "Event ObjectReference.OnTranslationAlmostComplete(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnTranslationAlmostComplete"
    },
    "Remote ObjectRef.OnTranslationComplete": {
        "prefix": "ontranslationcomplete-REM",
        "body": "Event ObjectReference.OnTranslationComplete(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnTranslationComplete"
    },
    "Remote ObjectRef.OnTranslationFailed": {
        "prefix": "ontranslationfailed-REM",
        "body": "Event ObjectReference.OnTranslationFailed(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnTranslationFailed"
    },
    "Remote ObjectRef.OnTrapHitStart": {
        "prefix": "ontraphitstart-REM",
        "body": "Event ObjectReference.OnTrapHitStart(ObjectReference akSender, ObjectReference akTarget, float afXVel, float afYVel, float afZVel, float afXPos, float afYPos, \\\r\n    float afZPos, int aeMaterial, bool abInitialHit, int aeMotionType)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnTrapHitStart"
    },
    "Remote ObjectRef.OnTrapHitStop": {
        "prefix": "ontraphitstop-REM",
        "body": "Event ObjectReference.OnTrapHitStop(ObjectReference akSender, ObjectReference akTarget)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnTrapHitStop"
    },
    "Remote ObjectRef.OnTriggerEnter": {
        "prefix": "ontriggerenter-REM",
        "body": "Event ObjectReference.OnTriggerEnter(ObjectReference akSender, ObjectReference akActionRef)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnTriggerEnter"
    },
    "Remote ObjectRef.OnTriggerLeave": {
        "prefix": "ontriggerleave-REM",
        "body": "Event ObjectReference.OnTriggerLeave(ObjectReference akSender, ObjectReference akActionRef)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnTriggerLeave"
    },
    "Remote ObjectRef.OnUnequipped": {
        "prefix": "onunequipped-REM",
        "body": "Event ObjectReference.OnUnequipped(ObjectReference akSender, Actor akActor)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnUnequipped"
    },
    "Remote ObjectRef.OnUnload": {
        "prefix": "onunload-REM",
        "body": "Event ObjectReference.OnUnload(ObjectReference akSender)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnUnload"
    },
    "Remote ObjectRef.OnWorkshopMode": {
        "prefix": "onworkshopmode-REM",
        "body": "Event ObjectReference.OnWorkshopMode(ObjectReference akSender, bool aStart)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnWorkshopMode"
    },
    "Remote ObjectRef.OnWorkshopNPCTransfer": {
        "prefix": "onworkshopnpctransfer-REM",
        "body": "Event ObjectReference.OnWorkshopNPCTransfer(ObjectReference akSender, Location akNewWorkshop, Keyword akActionKW)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnWorkshopNPCTransfer"
    },
    "Remote ObjectRef.OnWorkshopObjectDestroyed": {
        "prefix": "onworkshopobjectdestroyed-REM",
        "body": "Event ObjectReference.OnWorkshopObjectDestroyed(ObjectReference akSender, ObjectReference akActionRef)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnWorkshopObjectDestroyed"
    },
    "Remote ObjectRef.OnWorkshopObjectGrabbed": {
        "prefix": "onworkshopobjectgrabbed-REM",
        "body": "Event ObjectReference.OnWorkshopObjectGrabbed(ObjectReference akSender, ObjectReference akReference)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnWorkshopObjectGrabbed"
    },
    "Remote ObjectRef.OnWorkshopObjectMoved": {
        "prefix": "onworkshopobjectmoved-REM",
        "body": "Event ObjectReference.OnWorkshopObjectMoved(ObjectReference akSender, ObjectReference akReference)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnWorkshopObjectMoved"
    },
    "Remote ObjectRef.OnWorkshopObjectPlaced": {
        "prefix": "onworkshopobjectplaced-REM",
        "body": "Event ObjectReference.OnWorkshopObjectPlaced(ObjectReference akSender, ObjectReference akReference)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnWorkshopObjectPlaced"
    },
    "Remote ObjectRef.OnWorkshopObjectRepaired": {
        "prefix": "onworkshopobjectrepaired-REM",
        "body": "Event ObjectReference.OnWorkshopObjectRepaired(ObjectReference akSender, ObjectReference akReference)\r\n    ${0}\r\nEndEvent",
        "description": "Remote ObjectReference.OnWorkshopObjectRepaired"
    },
    "ObjectRef.GetAllMods": {
        "prefix": "getallmods",
        "body": "GetAllMods()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetConnectedObjects": {
        "prefix": "getconnectedobjects",
        "body": "GetConnectedObjects()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.AttachWire": {
        "prefix": "attachwire",
        "body": "AttachWire(${1:ObjectReference akReference}, ${2:Form akSpline = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.CreateWire": {
        "prefix": "createwire",
        "body": "CreateWire(${1:ObjectReference akReference}, ${2:Form akSpline = None})${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.Scrap": {
        "prefix": "scrap",
        "body": "Scrap()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetDisplayName": {
        "prefix": "getdisplayname",
        "body": "GetDisplayName()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetInventoryItems": {
        "prefix": "getinventoryitems",
        "body": "GetInventoryItems()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetInventoryWeight": {
        "prefix": "getinventoryweight",
        "body": "GetInventoryWeight()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.GetConnectPoints": {
        "prefix": "getconnectpoints",
        "body": "GetConnectPoints()${0}",
        "description": "ObjectReference"
    },
    "ObjectRef.TransmitConnectedPower": {
        "prefix": "transmitconnectedpower",
        "body": "TransmitConnectedPower()${0}",
        "description": "ObjectReference"
    }
}